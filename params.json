{"name":"Bastl","tagline":"bastl library for bastl-instruments.com","body":"Bastl Instruments is new brand for electronic hand-made musical instrument which continues the instruments tradition set up by Standuino. We are the same people and we believe that by focusing on musical instruments only we are able to achieve higher quality and innovation. The word Bastl refers very often to DIY electronics in Czech language, but also includes different forms of funny DIY.\r\n\r\n[under construction --- this is simple information page - more information/pictures and videos are coming with the new website]\r\n\r\nTrinity is open musical instrument bringing the power of digital instruments and their development to wider Bastl public. It runs Atmega 328 chip reprogrammable by Arduino IDE and ready to run Mozzi library.\r\n\r\nCasing and graphic layout was designed by Anymade Studio\r\n\r\nHackable!\r\n\r\nTrinity is open for any sort of hacks, and we will document them and make instructables for them. We are hoping to also implement some of the future hacks into the official Bastl softwares. You can hack the existing softwares or start your own synth software from scratch using the Mozzi library to output sound. Because Trinity is based on Arduino you can use the whole world of it to interface literally anything with it. It is hackable in hardware so you can connect sensors or motors to it or sync it to anything. The softwares and examples are written in structured form so they read and change them easily.\r\n\r\nWell crafted softwares to start with!\r\n\r\nWe have crafted and designed already 4 different official softwares running on Trinity hardware and there are many more to come.\r\n\r\nCommon features:\r\n\r\nsimple interface\r\nexpandability and hackable breakouts\r\nbreakout for FTDi USB connectivity enabling the instrument to be uploaded with software writen in Arduino IDE\r\nMozzi library compatible\r\nBastl library for easy interface read-out, handling memory and sound utilities\r\nchain connectors to share power, audio and communication within more Trinity instruments (when being chained the audio signals are being passively mixed by the volume knob and the MIDI communication is thrued further)\r\nMIDI input and output by attachable connector\r\nAssembly Instructions\r\n\r\ninstructables coming very very soon\r\nvery nice video by Daniel Baum\r\nPoly Synth\r\n\r\nFeatures:\r\n\r\nsubtractive or FM synthesis mode\r\n3 voice polyphony\r\n6 different sound for each preset\r\n3 presets\r\nin subtractive mode: oscillator + state variable filter with cutoff and resonance ( LP,HP,BP,notch )\r\nin FM mode: oscillator + modulation oscillator with selectable wavetables\r\nLFO with adjustable rate, resolution, amount, destination on different parameters and 8 different shapes\r\nADSR with impact on volume and adjustable impact to other parameters\r\nprecise setting of oscillator, LFO and ADSR features are accessed by adjusting character knob which goes thru all possible settings of routing and wavetables\r\nexchange sounds between more Poly Synths by SysEx message\r\n4 wavetables (sine, saw, distorted square, noise)\r\n3 note playback by MIDI - velocity sensitive\r\nmulti-timbral MIDI mode (lowest octave)\r\nMIDI thru\r\nMIDI CC support\r\nMono FM Synth\r\n\r\nFeatures:\r\n\r\nexperimental monophonic FM synthesizer\r\n8 different sound for each preset\r\n3 presets\r\n1 carrier oscillator with pitch tuned in semitones\r\n3 modulation oscillators with adjustable harmonic multiple of carrier frequency, detune and amount of modulation\r\n8 algorithms of oscillator configuration\r\n3 wavetables for all oscillators (sine, saw, white noise)\r\nLFO with adjustable rate, resolution, amount, destination on different parameters and 8 different shapes\r\nexchange sounds between more Mono FM Synths by SysEx message\r\nMIDI thru\r\nMIDI CC support\r\nDrum\r\n\r\nFeatures:\r\n\r\n3 voice polyphonic drum sample player\r\n6 different sound for each preset\r\n3 presets\r\n4 samples - kick, snare, hat, cowbell\r\nfor each sound you can adjust sample rate, time stretch, cut, distortion, volume and sample to be played\r\ndrum samples can be changed by converting wave files into .h file included in the source code (by python script included in Mozzi library)\r\nexchange sounds between more Drums by SysEx message\r\nsounds can be triggered by MIDI - velocity sensitive\r\nMIDI thru\r\nMIDI CC support\r\nSQNCR\r\n\r\nFeatures:\r\n\r\ncontrolling 3 different Trinity instruments (polyphonic or monophonic)\r\nsending MIDI notes on 3 channels\r\n32 steps / pattern\r\n4 patterns for each instrument in one preset\r\n3 presets\r\nrecording from buttons or MIDI\r\nerase single notes or clear whole pattern\r\nadjustable pattern length, groove and tempo\r\ntap tempo\r\njump function (step repeater)\r\nauto quantize\r\nMIDI clock support master or slave\r\nDownload\r\n\r\nBastl library for Arduino, includes all instruments as examples in the library + more examples. The download includes the schematics, harware description and readme for easy setup of the library.\r\nPlanned accesories\r\n\r\nMIDI input or output connector break out (prototype done) - via chain connectors\r\nKORG Volca sync connector break out - via chain connectors\r\nAudio Input connector for development of audio processing and effects\r\nIdeas and planned softwares for Trinity by Bastl Instruments\r\n\r\nxor synth 6 voice polyphonic synth playable by MIDI\r\nmystery drone synth\r\nmagic table oscillator synth\r\nalgorithm+random synth\r\nMIDI arpeggiator\r\nsequencer for single Trinity instrument\r\nautomation sequencer / LFO\r\n...and many more...\r\nAlready done hacks - documentation and instructables coming soon - many more to come\r\n\r\nsync sequencer with GameBoy Nanoloop\r\ntrigger analog drum sounds from SQNCR or Drum\r\nrandomizer\r\nphoto resistor (LDR) controlling parameters of synth","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}